{"version":3,"sources":["components/Services/projects-service.js","components/projects/AddProject.js","components/projects/ProjectList.js","components/projects/EditProject.js","components/Services/tasks-service.js","components/tasks/AddTask.js","components/projects/ProjectDetails.js","components/Services/auth-service.js","components/navbar/Navbar.js","components/tasks/EditTask.js","components/tasks/TaskDetails.js","components/auth/Signup.js","components/auth/Login.js","components/auth/protected-route.js","App.js","reportWebVitals.js","index.js"],"names":["ProjectService","allProjects","service","get","then","response","data","addProject","title","description","post","projectDetails","projectId","editProject","put","deleteProject","delete","axios","create","baseURL","process","REACT_APP_API_URL","withCredentials","this","AddProject","state","handleChange","event","target","name","value","setState","handleFormSubmit","preventDefault","console","log","props","getData","catch","err","className","onSubmit","type","onChange","e","Component","projectList","componentDidMount","getAllProjects","resFromApi","renderAllProjects","map","project","to","_id","tasks","task","index","length","theProject","handleSubmit","getProjectInfo","TaskService","getTask","taskId","createTask","imageUrl","editTask","isCompleted","fileUpload","theFile","deleteTask","addTask","isShowingForm","toggleShowForm","handleFileUpload","uploadData","FormData","append","files","secure_url","showAddTaskForm","onClick","projectInfo","componentDidUpdate","prevProps","match","params","id","responseFromApi","displayPorjectInfo","displayTasks","renderEditForm","EditProject","history","push","renderAddTaskForm","AddTask","ownerCheck","loggedInUser","owner","AuthService","signup","username","password","loggedIn","login","logout","navBar","logoutUser","getUser","renderUserWelcome","renderSignupLogin","nextProps","taskInfo","getTaskInfo","taskDetails","changeTaskStatus","EditTask","displayTaskInfo","src","alt","Signup","aNewUser","withRouter","Login","protectedRoute","component","user","rest","render","pathname","from","location","App","fetchUser","getTheUser","userObject","Navbar","userInSession","exact","path","ProjectList","ProjectDetails","TaskDetails","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1af894dd.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass ProjectService {\n    constructor(){\n        const service = axios.create({\n            baseURL: process.env.REACT_APP_API_URL,\n            withCredentials: true\n        });\n        this.service = service;\n    }\n\n    allProjects = ()=>{\n        return this.service.get('/')\n        .then(response => response.data)\n    };\n\n    addProject = (title, description)=>{\n        return this.service.post('/', { title, description })\n        .then(response => response.data)\n    };\n\n    projectDetails = (projectId)=>{\n        return this.service.get(`/${projectId}`)\n        .then(response => response.data)\n    };\n\n    editProject = (projectId, title, description)=>{\n        return this.service.put(`/${projectId}`, { title, description })\n        .then(response => response.data)\n    };\n\n    deleteProject = (projectId)=>{\n        return this.service.delete(`/${projectId}`)\n        .then(response => response.data)\n    };\n};\n\nexport default ProjectService;","import React, { Component } from 'react';\nimport ProjectService from '../Services/projects-service';\n\nclass AddProject extends Component {\n\n    state = {\n        title: \"\",\n        description: \"\"\n    }\n\n    service = new ProjectService();\n    \n    handleChange = (event)=>{\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    handleFormSubmit = (event)=>{\n        event.preventDefault();\n        const { title, description } = this.state;\n        this.service.addProject(title, description)\n        .then(response =>{\n            console.log(response)\n            this.props.getData();\n            this.setState({\n                title: \"\",\n                description: \"\"\n            });\n        })\n        .catch(err => {console.log(err)})\n\n    };\n\n    render(){\n        return(\n            <div className=\"addProject\" >\n                <h2>Create project</h2>\n                <form onSubmit={this.handleFormSubmit}>\n                    <label>Title: </label>\n                    <input type=\"text\" name=\"title\" value={this.state.title} onChange={(e)=>{this.handleChange(e)}} />\n                    <label>Description: </label>\n                    <input type=\"text\" name=\"description\" value={this.state.description} onChange={(e)=>{this.handleChange(e)}} />\n                    <button>Create</button>\n                </form>\n            </div>\n        ); \n    };\n    \n    \n};\n\nexport default AddProject;","import { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport AddProject from './AddProject';\nimport ProjectService from '../Services/projects-service';\n\nclass projectList extends Component {\n\n    state = {\n        allProjects: []\n    };\n\n    service = new ProjectService();\n\n    componentDidMount = ()=>{\n        this.getAllProjects();\n    };\n\n    getAllProjects = ()=>{\n        this.service.allProjects()\n        .then(resFromApi => {\n            this.setState({ allProjects: resFromApi });\n        })\n        .catch(err => {console.log(err)})\n    };\n\n    renderAllProjects = ()=>{\n        const allProjectsCopy = [...this.state.allProjects]\n        return allProjectsCopy.map((project) => {\n            return (\n                <div key={project._id}>\n                    <Link to={`/projects/${project._id}`}>\n                        <h3>{project.title}</h3>\n                    </Link>\n                    <ul>\n                        {project.tasks.map((task, index) =>{\n                            return <li key={index}>{task.title}</li>\n                        })}\n                    </ul>\n                </div>\n            )\n        });\n    }\n\n    render(){\n        return (\n            <div>\n                {this.state.allProjects.length > 0 && this.renderAllProjects()}\n                <div>\n                    <AddProject getData={this.getAllProjects} />\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default projectList;","import React, { Component } from 'react';\nimport ProjectService from '../Services/projects-service';\n\nclass editProject extends Component {\n    state = {\n        title: this.props.theProject.title,\n        description: this.props.theProject.description\n    };\n\n    service = new ProjectService();\n\n    handleChange = (event)=>{\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    handleSubmit = (event)=>{\n        event.preventDefault();\n        const { title, description } = this.state;\n        const projectId = this.props.theProject._id;\n        this.service.editProject(projectId, title, description)\n        .then(() => {\n            this.props.getProjectInfo();\n        })\n        .catch(err => console.log(err))\n    };\n\n\n    render(){\n        return(\n            <div>\n                <hr />\n                <h3>Edit project</h3>\n                <form className=\"editProject\" onSubmit={this.handleSubmit} >\n                    <label>Title: </label>\n                    <input type=\"text\" name=\"title\" value={this.state.title} onChange={(e)=>{this.handleChange(e)}} />\n                    <label>Description: </label>\n                    <textarea name=\"description\" value={this.state.description} onChange={(e)=>{this.handleChange(e)}} />\n                    <button>Confirm</button>\n                </form>\n            </div>\n        );\n    };\n};\n\nexport default editProject;","import axios from \"axios\";\n\nclass TaskService {\n    constructor(){\n        const service = axios.create({\n            baseURL: process.env.REACT_APP_API_URL,\n            withCredentials: true\n        });\n        this.service = service;\n    }\n\n    getTask = (projectId, taskId)=>{\n        return this.service.get(`/projects/${projectId}/tasks/${taskId}`)\n        .then(response => response.data)\n    };\n\n    createTask = (title, description, imageUrl, projectId)=>{\n        console.log(projectId)\n        return this.service.post('/tasks', { title, description, imageUrl, projectId })\n        .then(response => response.data)\n    };\n\n    editTask = (taskId, title, description, isCompleted, imageUrl)=>{\n        return this.service.put(`/tasks/${taskId}`, { title, description, isCompleted, imageUrl })\n        .then(response => response.data)\n    };\n\n    fileUpload = (theFile)=>{\n        return this.service.post('/upload', theFile)\n        .then(response => response.data)\n    };\n\n    deleteTask = (taskId)=>{\n        return this.service.delete(`/tasks/${taskId}`)\n        .then(response => response.data)\n    };\n};\n\nexport default TaskService;","import React, { Component } from 'react';\nimport TaskService from \"../Services/tasks-service\";\n\nclass addTask extends Component {\n    state = {\n        title: \"\",\n        description: \"\",\n        imageUrl: \"\",\n        isShowingForm: false\n    };\n\n    service = new TaskService();\n\n    toggleShowForm = ()=>{\n        this.setState({ isShowingForm: !this.state.isShowingForm });\n    };\n\n    handleChange = (event)=>{\n        const { name, value } = event.target\n        this.setState({ [name]: value });\n    };\n\n    handleFormSubmit=(event)=>{\n        event.preventDefault();\n        const { title, description, imageUrl } = this.state;\n        const projectId = this.props.theProject._id\n        this.service.createTask(title, description, imageUrl, projectId)\n        .then(()=>{\n            this.props.getProjectInfo();\n            this.setState({\n                title: \"\",\n                description: \"\",\n                imageUrl: \"\"\n            });\n        })\n        .catch(err => {console.log(err)})\n    };\n\n    handleFileUpload = (e)=>{\n        //console.log(e.target.files[0])\n        const uploadData = new FormData();\n        uploadData.append('imageUrl', e.target.files[0]);\n        this.service.fileUpload(uploadData)\n        .then(response => {\n            console.log(response)\n            this.setState({ imageUrl: response.secure_url });\n        })\n        .catch(err => console.log(\"Error uploading file\", err))\n    };\n\n\n    showAddTaskForm = ()=>{\n        return(\n            <div>\n                <h3>Add task</h3>\n                <form onSubmit={this.handleFormSubmit}>\n                    <label>Title: </label>\n                    <input type=\"text\" name=\"title\" value={this.state.title} onChange={(e)=>{this.handleChange(e)}} />\n                    <label>Description: </label>\n                    <textarea name=\"description\" value={this.state.description} onChange={(e)=>{this.handleChange(e)}} />\n                    <label>Image:</label>\n                    <input type=\"file\" onChange={(e)=>{this.handleFileUpload(e)}} />\n                    <button>Confirm</button>\n                </form> \n            </div>\n        );\n    };\n\n    render(){\n        return(\n            <div className=\"addTask\">\n                <hr />\n                <button onClick={this.toggleShowForm}>\n                    {this.state.isShowingForm ? \"Cancel\" : \"Add task\"}\n                </button>\n                {this.state.isShowingForm && this.showAddTaskForm()}\n            </div>\n        );\n    };\n};\n\nexport default addTask;","import React, { Component } from 'react';\nimport EditProject from './EditProject';\nimport { Link } from 'react-router-dom';\nimport AddTask from '../tasks/AddTask';\nimport ProjectService from '../Services/projects-service';\n\nclass projectDetails extends Component {\n    \n    state = {\n        projectInfo: {}\n    }; \n\n    service = new ProjectService();\n    \n    componentDidMount = ()=>{\n        this.getProjectInfo();\n    };\n\n    componentDidUpdate = (prevProps)=>{\n        if(prevProps.match.params.id !== this.props.match.params.id){\n            const projectId = this.props.match.params.id;\n            this.service.projectDetails(projectId)\n            .then(responseFromApi =>{\n                this.setState({ projectInfo: responseFromApi });\n            })\n            .catch(err => console.log(err))\n        };\n    };\n\n    getProjectInfo = ()=>{\n        const projectId = this.props.match.params.id;\n        this.service.projectDetails(projectId)\n        .then(responseFromApi => {\n            this.setState({ projectInfo: responseFromApi });\n        })\n        .catch(err => console.log(err))\n    };\n\n    displayPorjectInfo = ()=>{\n        return(\n            <div>\n                <h1>{this.state.projectInfo.title}</h1>\n                <p>{this.state.projectInfo.description}</p>\n            </div>\n        )\n    };\n    \n    displayTasks = ()=>{\n        const projectInfoCopy = {...this.state.projectInfo};\n        return projectInfoCopy.tasks.map((task) => {\n            return(\n                    <li key={task._id}>\n                        <Link  to={`/projects/${this.state.projectInfo._id}/tasks/${task._id}`}>\n                            <h4>{task.title}</h4>\n                        </Link>\n                        <p>{task.description}</p>\n                        <p>{task.isCompleted ? \"DONE\" : \"Pending\"}</p>\n                    </li>\n                \n                \n            );\n        }); \n    };\n\n    renderEditForm = ()=>{\n        if(!this.state.projectInfo.title){\n            this.getProjectInfo();\n        } else {\n            return(\n                <EditProject \n                    theProject={this.state.projectInfo} \n                    getProjectInfo={this.getProjectInfo} \n                    {...this.props} //=> {...props} => so we can have 'this.props.history' in Edit.js\n                />\n            )\n        }\n    };\n\n    deleteProject = ()=>{\n        const projectId = this.props.match.params.id\n        this.service.deleteProject(projectId)\n        .then((response) => {\n            console.log(response);\n            this.props.history.push('/projects');\n        })\n        .catch(err => console.log(err))\n    };\n\n    renderAddTaskForm = ()=>{\n        if(this.state.projectInfo.title){\n            return (\n                <AddTask \n                    theProject={this.state.projectInfo}\n                    getProjectInfo={this.getProjectInfo}\n                />\n            )\n        };\n    };\n\n    ownerCheck = ()=>{\n        if(this.props.loggedInUser && this.state.projectInfo.owner === this.props.loggedInUser._id){\n            return(\n                <div>\n                    {this.renderEditForm()}\n                    {this.renderAddTaskForm()}\n                    <button onClick={()=>{this.deleteProject()}}>DELETE PROJECT</button>\n                </div>\n            );\n        }\n    };\n\n    render(){\n        return(\n            <article className=\"projectDetails\">\n                {this.state.projectInfo.title && this.displayPorjectInfo()}\n                <hr />\n                {this.state.projectInfo.tasks && this.state.projectInfo.tasks.length > 0 && <h3>Tasks:</h3>}\n                <ol>\n                    {this.state.projectInfo.tasks && this.displayTasks()}\n                </ol>\n                <hr />\n                <div>{this.ownerCheck(this.state.projectId)}</div>\n                <br/>\n                <Link to={\"/projects\"}>Back to projects</Link>\n            </article>\n        );\n    };\n};\n\nexport default projectDetails;","import axios from 'axios';\n\nclass AuthService {\n    constructor() {\n        let service = axios.create({\n            baseURL: process.env.REACT_APP_API_URL,\n            withCredentials: true\n        });\n        this.service = service;\n    };\n\n    signup = (username, password)=>{\n        return this.service.post('/signup', { username, password })\n        .then(response => response.data)\n    };\n\n    loggedIn = ()=>{\n        return this.service.get('/loggedIn')\n        .then(response => response.data)\n    };\n\n    login = (username, password)=>{\n        return this.service.post('/login', { username, password })\n        .then(response => response.data)\n    };\n\n    logout = ()=>{\n        return this.service.post('/logout', {})\n        .then(response => response.data)\n    };\n};\n\nexport default AuthService;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../Services/auth-service';\n\nclass navBar extends Component {\n    \n    state = {\n        loggedInUser: null\n    };\n\n    service = new AuthService();\n\n    componentWillReceiveProps(nextProps){\n        this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n    };\n\n    logoutUser = ()=>{\n        this.service.logout()\n        .then(()=>{\n            this.setState({ loggedInUser: null });\n            this.props.getUser(null);\n        })\n        .catch()\n    };\n    \n    renderUserWelcome = ()=>{\n        return(\n            <ul>\n                <li>Welcome, {this.state.loggedInUser.username}</li>\n                <li> <Link to=\"/projects\">Projects</Link> </li>\n                <li> \n                    <Link to=\"/\">\n                        <button onClick={this.logoutUser}>Log out</button> \n                    </Link> \n                </li>\n            </ul>\n        );\n    };\n\n    renderSignupLogin = ()=>{\n        return(\n            <ul>\n                <li> <Link to=\"/signup\">Sign up</Link> </li>\n                <li> <Link to=\"/login\">Login</Link> </li>\n            </ul>\n        );\n    };\n\n    render(){\n        return (\n            <nav>\n                {this.state.loggedInUser ? this.renderUserWelcome() : this.renderSignupLogin()}\n            </nav>\n        ); \n    };\n};\n\nexport default navBar;","import React, { Component } from 'react';\nimport TaskService from \"../Services/tasks-service\";\n\nclass editTask extends Component {\n    state = {\n        title: this.props.taskInfo.title,\n        description: this.props.taskInfo.description,\n        isCompleted: this.props.taskInfo.isCompleted\n    };\n\n    service = new TaskService();\n\n    handleChange = (event)=>{\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    handleFormSubmit = (event)=>{\n        event.preventDefault();\n        const { title, description, isCompleted, imageUrl } = this.state;\n        const taskId = this.props.taskInfo._id;\n        this.service.editTask(taskId, title, description, isCompleted, imageUrl)\n        .then(() => {\n            this.props.getTaskInfo();\n        })\n        .catch(err => console.log(err))\n    };\n\n    \n    render(){\n        return(\n            <div>\n                <form onSubmit={(e)=>{this.handleFormSubmit(e)}}>\n                    <label> Title: </label>\n                    <input type=\"text\" name=\"title\" value={this.state.title} onChange={(e)=>{this.handleChange(e)}} />\n                    <label>Description: </label>\n                    <input type=\"text\" name=\"description\" value={this.state.description} onChange={(e)=>{this.handleChange(e)}} />\n                    <button>Confirm</button>\n                </form>\n            </div>\n        );\n    };\n};\n\nexport default editTask;","import React, { Component } from 'react';\nimport EditTask from './EditTask';\nimport TaskService from \"../Services/tasks-service\";\n\nclass taskDetails extends Component {\n    \n    state = {\n        taskInfo: {}\n    };\n\n    service = new TaskService();\n\n    componentDidMount = ()=>{\n        this.getTaskInfo();\n    };\n\n    getTaskInfo = ()=>{\n        const { projectId, taskId } = this.props.match.params;\n        this.service.getTask(projectId, taskId)\n        .then(responseFromApi => {\n            this.setState({ taskInfo: responseFromApi });\n        })\n        .catch(err => console.log(err))\n    };\n\n    changeTaskStatus = ()=>{\n        console.log(this.state.taskInfo.isCompleted)\n        this.setState({\n            taskInfo: {...this.state.taskInfo, isCompleted: !this.state.taskInfo.isCompleted} \n        }, ()=>{\n            const { _id, title, description, isCompleted, imageUrl } = this.state.taskInfo\n            console.log(isCompleted)\n            this.service.editTask(_id, title, description, isCompleted, imageUrl)\n            .then(response => console.log(response))\n        });\n    };\n\n    // toggleEditTaskForm = ()=>{\n    //     this.setState({ showingEditForm: !this.state.showingEditForm });\n    // };\n\n    deleteTask = ()=>{\n        this.service.deleteTask(this.state.taskInfo._id)\n        .then((response)=>{\n            console.log(response)\n            this.props.history.push(`/projects/${this.props.match.params.projectId}`)\n        })\n        .catch(err => console.log(err))\n    };\n\n    renderEditForm = ()=>{\n        if(!this.state.taskInfo.title){\n            this.getTaskInfo();\n        } else {\n            return(\n                <EditTask \n                    taskInfo={this.state.taskInfo} \n                    getTaskInfo={this.getTaskInfo}\n                    {...this.props} \n                />\n            );\n        }\n    };\n\n    displayTaskInfo = ()=>{\n        return(\n            <div>\n                <h4>{this.state.taskInfo.title}</h4>\n                <p>{this.state.taskInfo.description}</p>\n                <button onClick={this.changeTaskStatus}>\n                    {this.state.taskInfo.isCompleted ? \"DONE\" : \"Pending\"}\n                </button>\n                <hr />\n                {this.state.taskInfo.imageUrl && <img src={this.state.taskInfo.imageUrl} alt={`${this.state.taskInfo.title}`} />}\n                <hr />\n                {this.renderEditForm()}\n                <hr />\n                <button onClick={()=>{this.deleteTask()}} >DELETE TASK</button>\n            </div>\n        );\n    };\n\n    render(){\n        return(\n            <div>\n                {this.state.taskInfo && this.displayTaskInfo()}\n            </div>\n        );\n    };\n};\n\nexport default taskDetails;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport AuthService from '../Services/auth-service';\n\nclass Signup extends Component {\n\n    state = {\n        username: \"\",\n        password: \"\"\n    };\n\n    service = new AuthService();\n\n    handleFormSubmit = (event)=>{\n        event.preventDefault();\n        const { username, password } = this.state;\n        this.service.signup(username, password)\n        .then(response => {\n            this.setState({\n                username: \"\",\n                password: \"\"\n            });\n            console.log(response)\n            this.props.getUser(response.aNewUser);\n            this.props.history.push(\"/projects\");\n        })\n        .catch(err => console.log(err))\n    };\n\n    handleChange = (event)=>{\n        const { name, value } = event.target;\n        this.setState({ [name]: value});\n    };\n\n    render(){\n        return(\n            <div>\n                <form onSubmit={this.handleFormSubmit}>\n                    <label>Username: </label>\n                    <input type=\"text\" name=\"username\" value={this.state.username} onChange={(e)=>{this.handleChange(e)}} />\n                    <label>Password: </label>\n                    <input type=\"password\" name=\"password\" value={this.state.password} onChange={(e)=>{this.handleChange(e)}} />\n                    <button>Sign up</button>\n                </form>\n                <p>\n                    Already have an account?\n                    <Link to={\"/login\"}>Log in</Link>\n                </p>\n            </div>\n        );\n    };\n};\n\nexport default withRouter(Signup);","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport AuthService from '../Services/auth-service';\n\nclass Login extends Component {\n\n    state = {\n        username: \"\",\n        password: \"\"\n    };\n\n    service = new AuthService();\n\n    handleFormSubmit = (event)=>{\n        event.preventDefault();\n        const { username, password } = this.state;\n        this.service.login(username, password)\n        .then(response => {\n            this.setState({\n                username: \"\",\n                password: \"\"\n            });\n            this.props.getUser(response);\n            this.props.history.push(\"/projects\");\n        })\n        .catch(err => console.log(err))\n    };\n\n    handleChange = (event)=>{\n        const { name, value } = event.target;\n        this.setState({ [name]: value});\n    };\n\n    render(){\n        return(\n            <div>\n                <form onSubmit={this.handleFormSubmit}>\n                    <label>Username: </label>\n                    <input type=\"text\" name=\"username\" value={this.state.username} onChange={(e)=>{this.handleChange(e)}} />\n                    <label>Password: </label>\n                    <input type=\"password\" name=\"password\" value={this.state.password} onChange={(e)=>{this.handleChange(e)}} />\n                    <button>Log in</button>\n                </form>\n                <p>\n                    Don't have account?\n                    <Link to={\"/signup\"}>Sign Up</Link>\n                </p>\n            </div>\n        );\n    };\n};\n\nexport default withRouter(Login);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst protectedRoute = ({component: Component, user, ...rest})=>{\n    //console.log({component: Component, user, ...rest});\n    return(\n        <Route \n            {...rest}\n            render={props => {\n                if(user){\n                    return <Component {...props} loggedInUser={user} />\n                } else {\n                    return <Redirect to={{pathname: \"/\", state: {from: props.location}}} />\n                }\n            }}\n        />\n    );\n};\n\nexport default protectedRoute;","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\n\nimport ProjectList from './components/projects/ProjectList';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport Navbar from './components/navbar/Navbar';\nimport TaskDetails from './components/tasks/TaskDetails';\nimport Signup from './components/auth/Signup'\nimport Login from './components/auth/Login';\nimport AuthService from './components/Services/auth-service';\nimport ProtectedRoute from './components/auth/protected-route';\n\n\n// TODO: deploy\n\n\nclass App extends Component {\n  \n  state = {\n    loggedInUser: null\n  };\n\n  service = new AuthService();\n\n  fetchUser = ()=>{\n    if(this.state.loggedInUser === null){\n      this.service.loggedIn()\n      .then(response => {\n        this.setState({ loggedInUser: response });\n      })\n      .catch((err)=>{\n        console.log(err);\n        this.setState({ loggedInUser: false });\n      })\n    }\n  };\n\n  getTheUser = (userObject)=>{\n    this.setState({ loggedInUser:  userObject});\n  };\n\n\n  render(){\n    this.fetchUser();\n    if(this.state.loggedInUser){\n      return (\n        <div className=\"App\">\n          <Navbar userInSession={this.state.loggedInUser} getUser={this.getTheUser} />\n          <Switch>\n            <ProtectedRoute user={this.state.loggedInUser} exact path=\"/projects\" component={ProjectList} />\n            <ProtectedRoute user={this.state.loggedInUser} exact path=\"/projects/:id\" component={ProjectDetails} />\n            <ProtectedRoute user={this.state.loggedInUser} exact path=\"/projects/:projectId/tasks/:taskId\" component={TaskDetails} />\n          </Switch>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Navbar userInSession={this.state.loggedInUser} />\n          <Switch>\n            <Route exact path=\"/signup\" render={()=> <Signup getUser={this.getTheUser} />} />\n            <Route exact path = \"/login\" render={()=> <Login getUser={this.getTheUser} /> } />\n            <ProtectedRoute user={this.state.loggedInUser} exact path=\"/projects\" component={ProjectList} />\n            <ProtectedRoute user={this.state.loggedInUser} exact path=\"/projects/:id\" component={ProjectDetails} />\n            <ProtectedRoute user={this.state.loggedInUser} exact path=\"/projects/:projectId/tasks/:taskId\" component={TaskDetails} />\n          </Switch>\n        </div>\n      );\n    };\n  };  \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}